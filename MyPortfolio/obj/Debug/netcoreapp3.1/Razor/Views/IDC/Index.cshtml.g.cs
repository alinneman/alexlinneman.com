#pragma checksum "/Users/alexlinneman/Projects/MyPortfolio/MyPortfolio/Views/IDC/Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "d69e05054398f2951b8e2c90fec997a8390ce9c6"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_IDC_Index), @"mvc.1.0.view", @"/Views/IDC/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "/Users/alexlinneman/Projects/MyPortfolio/MyPortfolio/Views/_ViewImports.cshtml"
using MyPortfolio;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/Users/alexlinneman/Projects/MyPortfolio/MyPortfolio/Views/_ViewImports.cshtml"
using MyPortfolio.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d69e05054398f2951b8e2c90fec997a8390ce9c6", @"/Views/IDC/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"2b0fdc90dd0e45556f54000adf4887349491b671", @"/Views/_ViewImports.cshtml")]
    public class Views_IDC_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("action", new global::Microsoft.AspNetCore.Html.HtmlString("IDC/Details"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "post", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "/Users/alexlinneman/Projects/MyPortfolio/MyPortfolio/Views/IDC/Index.cshtml"
  
    ViewData["Title"] = "IDC";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"<style>

    #IDC {
        color: #F28500
    }

    #IDCButton {
        color: white;
        background-color: #F28500;
        border-radius: 7px;
        padding-bottom: 10px;
        padding-top: 10px;
        padding-right: 18px;
        padding-left: 18px;
        font-size: 20px;
    }
</style>
<div>
    <h3 id=""IDC"">
        I know you're here because you said ""I don't care,"" but
        before you are given a random resaurant, let's set some
        preferences. Because, let's be honest, you do care a little bit.
    </h3>
    <br />
    <br />
    <div class=""row"">
        <div class=""col-md-3"" style=""text-align: left;"">
            <h3>Radius:</h3>
            <h4 id=""radiusHeader""></h4>
            <input id=""distanceRange"" type=""range"" min=""0.1"" max=""25"" step=""0.1"" value=""10"" style=""width:100%"" oninput=""updateRangeValue(this.value)"" />
        </div>
        <div class=""col-md-3"" style=""text-align: left;"">
            <h3>Price:</h3>
            <h4 id=""priceHe");
            WriteLiteral(@"ader""></h4>
            <fieldset id=""price""  style=""font-size:18px;"">
                <input type=""radio"" name=""price"" value=""1"" onclick=""updatePriceValue(this)"" /> $<br />
                <input type=""radio"" name=""price"" value=""2"" onclick=""updatePriceValue(this)"" /> $$<br />
                <input type=""radio"" name=""price"" value=""3"" onclick=""updatePriceValue(this)"" /> $$$<br />
                <input type=""radio"" name=""price"" value=""4"" onclick=""updatePriceValue(this)"" /> $$$$<br />
            </fieldset>
        </div>
        <div class=""col-md-3"" style=""text-align: left;"">
            <h3>Open Now?</h3>
            <h4 id=""openHeader""></h4>
            <fieldset id=""openNow""  style=""font-size:18px;"">
                <input type=""radio"" name=""openNow"" value=""1"" onclick=""updateOpenValue(this.value)"" /> Yes<br />
                <input type=""radio"" name=""openNow"" value=""0"" onclick=""updateOpenValue(this.value)"" /> I Don't Care<br />
            </fieldset>
        </div>
        <div class=""c");
            WriteLiteral(@"ol-md-3"" style=""text-align: left;"">
            <h3>Rating:</h3>
            <h4 id=""ratingHeader""></h4>
            <fieldset id=""rating"">
                <input id=""1star"" type=""radio"" name=""rating"" value=""1"" onclick=""updateRatingValue(this)"" />
                <label for=""1star""><img src=""https://imgur.com/cTYQbw6.png"" /></label><br />
                <input id=""2star"" type=""radio"" name=""rating"" value=""2"" onclick=""updateRatingValue(this)"" />
                <label for=""2star""><img src=""https://i.imgur.com/XxIeY8N.png"" /></label><br />
                <input id=""3star"" type=""radio"" name=""rating"" value=""3"" onclick=""updateRatingValue(this)"" />
                <label for=""3star""><img src=""https://i.imgur.com/wxieS2R.png"" /></label><br />
                <input id=""4star"" type=""radio"" name=""rating"" value=""4"" onclick=""updateRatingValue(this)"" />
                <label for=""4star""><img src=""https://i.imgur.com/Thmd2gJ.png"" /></label><br />
                <input id=""5star"" type=""radio"" name=""rating"" v");
            WriteLiteral(@"alue=""5"" onclick=""updateRatingValue(this)"" />
                <label for=""5star""><img src=""https://imgur.com/3JN5YKQ.png"" /></label><br />
            </fieldset>
        </div>
    </div>
    <br />
    <br />
    <div class=""row"">
        <div class=""col-md-12"" style=""text-align: center;"">
            <h3>Categories</h3>
        </div>
    </div>
    <div class=""row"">
        <div class=""col-md-3"" style=""text-align: left;"">
            <h4>Regions</h4>
            <fieldset id=""cats"" style=""font-size:18px;"">
                <input type=""checkbox"" name=""cats"" value=""african"" onclick=""updateCatsArray(this.value)""/> African<br />
                <input type=""checkbox"" name=""cats"" value=""newamerican,tradamerican,chicken_wings,burgers"" onclick=""updateCatsArray(this.value)"" /> American<br />
                <input type=""checkbox"" name=""cats"" value=""asianfusion,himalayan,hkcafe,indpak,indonesian,japanese,korean,raw_food,malaysian,mongolian,oriental,sushi,taiwanese,thai,vietnamese,chinese"" onclick");
            WriteLiteral(@"=""updateCatsArray(this.value)"" /> Asian<br />
                <input type=""checkbox"" name=""cats"" value=""austrian,bavarian,belgian,british,bulgarian,czech,danish,eastern_european,french,german,greek,irish,italian,israeli,jewish,mediterranean,modern_european,moroccan,swissfood,turkish""  onclick=""updateCatsArray(this.value)""/> European<br />
                <input type=""checkbox"" name=""cats"" value=""hawaiian"" onclick=""updateCatsArray(this.value)"" /> Hawaiian<br />
                <input type=""checkbox"" name=""cats"" value=""mexican"" onclick=""updateCatsArray(this.value)""/> Mexican<br />
                <input type=""checkbox"" name=""cats"" value=""mideastern,afghani,arabian,halal,kurdish,pakistani,persian,uzbek"" onclick=""updateCatsArray(this.value)"" /> Middle East<br />
                <input type=""checkbox"" name=""cats"" value=""argentine,brazilian,caribbean,chilean,honduran,latin,peruvian,spanish"" onclick=""updateCatsArray(this.value)"" /> South American<br />
            </fieldset>
        </div>
        <div clas");
            WriteLiteral(@"s=""col-md-3"" style=""text-align: left;"">
            <h4>Establishments</h4>
            <fieldset id=""cats"" style=""font-size:18px;"">
                <input type=""checkbox"" name=""cats"" value=""bistros"" onclick=""updateCatsArray(this.value)"" /> Bistros<br />
                <input type=""checkbox"" name=""cats"" value=""buffets"" onclick=""updateCatsArray(this.value)"" /> Buffets<br />
                <input type=""checkbox"" name=""cats"" value=""cafes"" onclick=""updateCatsArray(this.value)"" /> Cafes<br />
                <input type=""checkbox"" name=""cats"" value=""cafeteria"" onclick=""updateCatsArray(this.value)"" /> Cafeterias<br />
                <input type=""checkbox"" name=""cats"" value=""creperies"" onclick=""updateCatsArray(this.value)"" /> Creperies<br />
                <input type=""checkbox"" name=""cats"" value=""diners"" onclick=""updateCatsArray(this.value)"" /> Diners<br />
                <input type=""checkbox"" name=""cats"" value=""food_court"" onclick=""updateCatsArray(this.value)"" /> Food Courts<br />
                <");
            WriteLiteral(@"input type=""checkbox"" name=""cats"" value=""foodstands"" onclick=""updateCatsArray(this.value)"" /> Food Stands<br />
                <input type=""checkbox"" name=""cats"" value=""steak"" onclick=""updateCatsArray(this.value)"" /> Steakhouses<br />
            </fieldset>
        </div>
        <div class=""col-md-3"" style=""text-align: left;"">
            <h4>Types</h4>
            <fieldset id=""cats"" style=""font-size:18px;"">
                <input type=""checkbox"" name=""cats"" value=""bbq"" onclick=""updateCatsArray(this.value)"" /> Barbecue<br />
                <input type=""checkbox"" name=""cats"" value=""breakfast_brunch"" onclick=""updateCatsArray(this.value)"" /> Breakfast/Brunch<br />
                <input type=""checkbox"" name=""cats"" value=""cajun"" onclick=""updateCatsArray(this.value)"" /> Cajun/Creole<br />
                <input type=""checkbox"" name=""cats"" value=""comfortfood"" onclick=""updateCatsArray(this.value)"" /> Comfort Food<br />
                <input type=""checkbox"" name=""cats"" value=""hotdogs"" onclick=""update");
            WriteLiteral(@"CatsArray(this.value)"" /> Fast Food<br />
                <input type=""checkbox"" name=""cats"" value=""pizza"" onclick=""updateCatsArray(this.value)"" /> Pizza<br />
                <input type=""checkbox"" name=""cats"" value=""pubfood"" onclick=""updateCatsArray(this.value)"" /> Pub Food<br />
                <input type=""checkbox"" name=""cats"" value=""seafood"" onclick=""updateCatsArray(this.value)"" /> Seafood<br />
                <input type=""checkbox"" name=""cats"" value=""soup"" onclick=""updateCatsArray(this.value)"" /> Soup<br />
            </fieldset>
        </div>
        <div class=""col-md-3"" style=""text-align: left;"">
            <h4>Accommodations</h4>
            <fieldset id=""cats"" style=""font-size:18px;"">
                <input type=""checkbox"" name=""cats"" value=""vegan"" onclick=""updateCatsArray(this.value)"" /> Vegan<br />
                <input type=""checkbox"" name=""cats"" value=""vegetarian"" onclick=""updateCatsArray(this.value)"" /> Vegetarian<br />
            </fieldset>
        </div>
    </div>
   ");
            WriteLiteral(" <br />\r\n    <br />\r\n    <div class=\"row\">\r\n        <div class=\"col-md-6\" style=\"text-align: left;\">\r\n            <button id=\"IDCButton\"");
            BeginWriteAttribute("onclick", " onclick=\'", 8367, "\'", 8427, 5);
            WriteAttributeValue("", 8377, "window.location", 8377, 15, true);
            WriteAttributeValue(" ", 8392, "=", 8393, 2, true);
            WriteAttributeValue(" ", 8394, "\"", 8395, 2, true);
#nullable restore
#line 131 "/Users/alexlinneman/Projects/MyPortfolio/MyPortfolio/Views/IDC/Index.cshtml"
WriteAttributeValue("", 8396, Url.Action("IDCApp", "Home"), 8396, 29, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue("", 8425, "\";", 8425, 2, true);
            EndWriteAttribute();
            WriteLiteral(">Go Back</button>\r\n        </div>\r\n        <div class=\"col-md-6\" style=\"text-align: right;\">\r\n            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d69e05054398f2951b8e2c90fec997a8390ce9c613765", async() => {
                WriteLiteral("\r\n                <input type=\"text\" id=\"cityInput\" name=\"city\" style=\"display: none\"");
                BeginWriteAttribute("value", " value=\"", 8661, "\"", 8682, 1);
#nullable restore
#line 135 "/Users/alexlinneman/Projects/MyPortfolio/MyPortfolio/Views/IDC/Index.cshtml"
WriteAttributeValue("", 8669, ViewBag.city, 8669, 13, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral("/>\r\n                <input type=\"text\" id=\"latitudeInput\" name=\"latitude\" style=\"display: none\"");
                BeginWriteAttribute("value", " value=\"", 8778, "\"", 8803, 1);
#nullable restore
#line 136 "/Users/alexlinneman/Projects/MyPortfolio/MyPortfolio/Views/IDC/Index.cshtml"
WriteAttributeValue("", 8786, ViewBag.latitude, 8786, 17, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral("/>\r\n                <input type=\"text\" id=\"longitudeInput\" name=\"longitude\" style=\"display: none\"");
                BeginWriteAttribute("value", " value=\"", 8901, "\"", 8927, 1);
#nullable restore
#line 137 "/Users/alexlinneman/Projects/MyPortfolio/MyPortfolio/Views/IDC/Index.cshtml"
WriteAttributeValue("", 8909, ViewBag.longitude, 8909, 18, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(@"/>
                <input type=""text"" id=""radiusInput"" name=""radius"" style=""display: none"" />
                <input type=""text"" id=""priceInput"" name=""price"" style=""display: none"" />
                <input type=""text"" id=""ratingInput"" name=""rating"" style=""display: none"" />
                <input type=""text"" id=""openNowInput"" name=""openNow"" style=""display: none"" />
                <input type=""text"" id=""catsInput"" name=""cats"" style=""display: none"" />
                <input type=""submit"" id=""IDCButton"" value=""Continue"" />
            ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
        </div>
    </div>
</div>

<script>
    var catsArray = [];
    function updateRangeValue(val) {
        var rangeHeader = document.getElementById(""radiusHeader"");
        document.getElementById(""radiusInput"").value = val;
        if (val > 1 || val < 1) {
            var str = new String(""within "" + val + "" miles"");
            rangeHeader.outerHTML = ""<h4 id=\""radiusHeader\"">"" + str.fontcolor(""#F28500"") + ""</h4>"";
        } else {
            var str = new String(""within "" + val + "" mile"");
            rangeHeader.outerHTML = ""<h4 id=\""radiusHeader\"">"" + str.fontcolor(""#F28500"") + ""</h4>"";
        }
    }
    function updatePriceValue(radio) {
        var priceHeader = document.getElementById(""priceHeader"");
        document.getElementById(""priceInput"").value = radio.value;
        radio.checked = true;
        if (radio.value === ""4"") {
            var str = new String(""Any price"");
            priceHeader.outerHTML = ""<h4 id=\""priceHeader\"">"" + str.fontcolor(""#F28500"") + ""</");
            WriteLiteral(@"h4>"";
        }
        else if (radio.value === ""3"") {
            var str = new String(""$60 and under"");
            priceHeader.outerHTML = ""<h4 id=\""priceHeader\"">"" + str.fontcolor(""#F28500"") + ""</h4>"";
        }
        else if (radio.value === ""2"") {
            var str = new String(""$30 and under"");
            priceHeader.outerHTML = ""<h4 id=\""priceHeader\"">"" + str.fontcolor(""#F28500"") + ""</h4>"";
        }
        else {
            var str = new String(""$10 and under"");
            priceHeader.outerHTML = ""<h4 id=\""priceHeader\"">"" + str.fontcolor(""#F28500"") + ""</h4>"";
        }
    }
    function updateOpenValue(val) {
        var openHeader = document.getElementById(""openHeader"");
        document.getElementById(""openNowInput"").value = val;
        if (val === ""1"") {
            var str = new String(""Yes"");
            openHeader.outerHTML = ""<h4 id=\""openHeader\"">"" + str.fontcolor(""#F28500"") + ""</h4>"";
        } else {
            var str = new String(""I Don't Care"");
         ");
            WriteLiteral(@"   openHeader.outerHTML = ""<h4 id=\""openHeader\"">"" + str.fontcolor(""#F28500"") + ""</h4>"";

        }
    }
    function updateRatingValue(radio) {
        var ratingHeader = document.getElementById(""ratingHeader"");
        document.getElementById(""ratingInput"").value = radio.value;
        radio.checked = true;
        if (radio.value === ""5"") {
            var str = new String(""5 stars"");
            ratingHeader.outerHTML = ""<h4 id=\""ratingHeader\"">"" + str.fontcolor(""#F28500"") + ""</h4>"";
        }
        else if (radio.value === ""4"") {
            var str = new String(""4 stars or more"");
            ratingHeader.outerHTML = ""<h4 id=\""ratingHeader\"">"" + str.fontcolor(""#F28500"") + ""</h4>"";
        }
        else if (radio.value === ""3"") {
            var str = new String(""3 stars or more"");
            ratingHeader.outerHTML = ""<h4 id=\""ratingHeader\"">"" + str.fontcolor(""#F28500"") + ""</h4>"";
        }
        else if (radio.value === ""2"") {
            var str = new String(""2 stars or more"")");
            WriteLiteral(@";
            ratingHeader.outerHTML = ""<h4 id=\""ratingHeader\"">"" + str.fontcolor(""#F28500"") + ""</h4>"";
        }
        else {
            var str = new String(""1 star or more"");
            ratingHeader.outerHTML = ""<h4 id=\""ratingHeader\"">"" + str.fontcolor(""#F28500"") + ""</h4>"";
        }
    }

    function updateCatsArray(val) {
        if (catsArray.includes(val)) {
            const index = catsArray.indexOf(val);
            if (index > -1) {
                catsArray.splice(index, 1);
            }
        } else {
            catsArray.push(val);
        }
        document.getElementById(""catsInput"").value = catsArray.toString();
    }
</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
